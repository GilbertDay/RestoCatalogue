{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";iJAOA,QALqB,CACnBA,KAAM,GAAF,OAAKC,EAAAA,EAAAA,SAAe,SACxBC,OAAQ,SAACC,GAAE,gBAAQF,EAAAA,EAAAA,SAAe,mBAAWE,EAAE,sPCHjD,knGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0lBAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,+GAeA,QAbqB,yBAFrB,4FAEqB,SAFrB,QAOG,EALkB,EAWlB,OAbH,EAEqB,OAFrB,EAEqB,yCACnB,sGACyBC,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,wFAED,WAA4BP,GAAE,yFACLE,MAAMC,EAAAA,OAAoBH,IAAI,OAAvC,OAARI,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaE,YAAU,2CAC/B,+CAbH,6DAaG,EAXkB,4SCFrB,45NAQA,IAAQC,EAAuDX,EAAAA,EAAAA,cAAxCY,EAAwCZ,EAAAA,EAAAA,iBAAtBa,EAAsBb,EAAAA,EAAAA,kBAEzDc,GAAYC,EAAAA,EAAAA,IAAOJ,EAAeC,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA+BF,QA5BsB,yBAhBtB,4FAgBsB,SAhBtB,QAsCG,EAJA,EARA,EAJA,EANmB,EAyBnB,OAzCH,EAgBsB,OAhBtB,EAgBsB,sCACpB,WAAsBjB,GAAE,oEACjBA,EAAI,CAAF,gEAGOY,EAAS,uCAAEM,IAAIP,EAAmBX,IAAE,2CACnD,sFAED,8FACgBY,EAAS,uCAAEO,OAAOR,IAAiB,2CAClD,kFAED,WAAsBS,GAAK,oEACpBA,EAAMC,eAAe,MAAO,CAAF,gEAIjBT,EAAS,uCAAEU,IAAIX,EAAmBS,IAAK,2CACtD,sFAED,WAAyBpB,GAAE,iFACXY,EAAS,8CAASD,EAAmBX,IAAE,2CACtD,sFAED,WAAyBuB,GAAK,qGAC7B,+CAzCH,6DAyCG,EAzBmB,mCCNtB,QAXe,CACbC,SAAU,sCACVC,qBAAsB,oDACtBC,sBAAuB,qDACvBC,iBAAkB,QAClBC,WAAY,oBACZnB,cAAe,gCACfC,iBAAkB,EAClBC,kBAAmB,2DCCfkB,8BAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://sumissionrestopwa/./src/scripts/globals/api-endpoint.js","webpack://sumissionrestopwa/./src/scripts/data/data-resto.js","webpack://sumissionrestopwa/./src/scripts/data/favorite-resto-idb.js","webpack://sumissionrestopwa/./src/scripts/globals/config.js","webpack://sumissionrestopwa/./src/scripts/index.js"],"sourcesContent":["import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  LIST: `${CONFIG.BASE_URL}/list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","/* eslint-disable no-unreachable */\nimport API_ENDPOINT from '../globals/api-endpoint';\n\nclass DataRestoSource {\n  static async getAllResto() {\n    const response = await fetch(API_ENDPOINT.LIST);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async getRestoDetail(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant;\n  }\n}\nexport default DataRestoSource;\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable no-empty-function */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable consistent-return */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nclass FavoriteRestoIdb {\n  static async getResto(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  }\n\n  static async getAllResto() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  }\n\n  static async putResto(resto) {\n    if (!resto.hasOwnProperty('id')) {\n      return;\n    }\n\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\n  }\n\n  static async deleteResto(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  }\n\n  static async searchResto(query) {\n  }\n}\n\nexport default FavoriteRestoIdb;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\n  SMALL_BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/small/',\n  MEDIUM_BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  DEFAULT_LANGUAGE: 'en-us',\n  CACHE_NAME: 'RestoCatalogue-V1',\n  DATABASE_NAME: 'restaurant-catalogue-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurants',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/style.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport './views/component/app-bar';\nimport './views/component/jumbotron';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["LIST","CONFIG","DETAIL","id","i","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","get","getAll","resto","hasOwnProperty","put","query","BASE_URL","SMALL_BASE_IMAGE_URL","MEDIUM_BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}